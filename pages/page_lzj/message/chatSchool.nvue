<template>
	<view class="box fx">
		<scroll-view class="message" :scroll-y="true" :scroll-into-view="lowerThreshold">
			<view class="message-detail fx" v-for="(item, i) in dataList" :key="i">
				<text class="timer">{{item.time.slice(-8)}}</text>
				<view class="message-content fx" :class="item.currentId !== userInfo.user.id ? 'left' : 'right'">
					<image class="image" src="../../../static/image/tabBal/IndexSelect.png" v-if="item.currentId !== userInfo.user.id"></image>
					<view class="message-content-context">
						<text class="message-content-context-text">{{item.messageContent}}</text>
					</view>
					<image class="image" src="../../../static/image/tabBal/IndexSelect.png" v-if="item.currentId === userInfo.user.id"></image>
				</view>
			</view>
			<view id="message-bottom"></view>
		</scroll-view>

		<!-- 发送内容 -->
		<view class="send-message-placeholder"></view>
	</view>
</template>

<script>
	import chatCommon from './chatCommon.js'
	export default {
		mixins: [chatCommon],
		onLoad(data) {
			uni.setNavigationBarTitle({
				title: data.userName
			})
			let userInfo = getApp().globalData.userInfo;
			// // 获取消息详情列表
			this.getMessageDetail(userInfo.user.id, data.elId, '0');

			this.createSocket();
		},
		data() {
			return {
				socket: null,
				dataList: []
			}
		},
		methods: {
			/**
			 * 发送消息
			 */
			sendMsg(input) {
				this.dataList = this.dataList.concat([{
					messageContent: input, // 消息内容
					messageSource: "1", //
					teacherName: "",
					schoolId: "1209017944516874241",
					userId: "1210750415944052736",
					time: "2020-03-19 12:39:26",
					Target: "user1209017944516874241",
					self: "user1210750415944052736",
					phone: "13983331251",
					currentId: "1210750415944052736"
				}])
			}
		},
		updated() {
			this.lowerThreshold = 'message-bottom'
		}
	}
</script>

<style lang="scss" scoped>
	.box {
		flex-direction: column;
		height: 100vh;
	}

	.message {
		flex: 1;
	}

	.message-detail {
		align-items: center;
		flex-direction: column;
		padding-top: 24rpx;
	}

	.timer {
		color: #999999;
		font-size: 16rpx;
	}

	.message-content {
		width: 690rpx;
	}

	.image {
		width: 88rpx;
		height: 88rpx;
	}

	.message-content-context {
		padding: 28rpx 34rpx;
		margin-top: 20rpx;
		background-color: #FD8109;
		border-radius: 16rpx;
	}

	.message-content-context-text {
		color: #ffffff;
	}

	.message-content-context {
		margin-left: 20rpx;
	}

	.right {
		justify-content: flex-end;
	}

	.message-content-context {
		margin-right: 20rpx;
	}

	.send-message-placeholder {
		width: 100vw;
		height: 48rpx;
	}

	.send-message {
		position: fixed;
		bottom: 0;
		left: 0;
		justify-content: space-between;
		width: 100vw;
		padding: 14rpx 28rpx;
		box-shadow: 0 1px 20px 0 #e5e5e5;
	}
</style>
